<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AssertFailMessage" xml:space="preserve">
    <value>断言检查变量‘{0}’失败。预期值：‘{1}’；真实值：‘{2}’。</value>
  </data>
  <data name="CannotSendWhenDeactive" xml:space="preserve">
    <value>信使处于非激活状态时不能执行消息发送。</value>
  </data>
  <data name="CastInterface" xml:space="preserve">
    <value>不支持到接口或抽象类“{0}”的转换。</value>
  </data>
  <data name="CastNullValue" xml:space="preserve">
    <value>不能将null值转换为类型”{0}“。</value>
  </data>
  <data name="CastValueFailed" xml:space="preserve">
    <value>到类型“{0}”的转换失败。</value>
  </data>
  <data name="ConditionBlockHasFunc" xml:space="preserve">
    <value>序列中存在Function不为空的条件分支块。</value>
  </data>
  <data name="EventEnqueueTimeOut" xml:space="preserve">
    <value>事件入列超时。</value>
  </data>
  <data name="EventQueueOverflow" xml:space="preserve">
    <value>事件队列已溢出。</value>
  </data>
  <data name="IllegalStepType" xml:space="preserve">
    <value>序列中存在类型不符合规则的步骤。</value>
  </data>
  <data name="IncorrectDelegate" xml:space="preserve">
    <value>错误的委托类型：{0}。</value>
  </data>
  <data name="IncorrectParamType" xml:space="preserve">
    <value>事件参数类型应为”{0}“。</value>
  </data>
  <data name="InvalidLibVersion" xml:space="preserve">
    <value>程序集‘{0}’是序列中定义程序集的早期版本。</value>
  </data>
  <data name="InvalidMessageReceived" xml:space="preserve">
    <value>接收到非法的消息“{0}”。</value>
  </data>
  <data name="InvalidParamVar" xml:space="preserve">
    <value>序列中存在参数配置错误的步骤。</value>
  </data>
  <data name="InvalidTypeCast" xml:space="preserve">
    <value>不支持到类型‘{0}’的转换。</value>
  </data>
  <data name="InvalidValueTypeCast" xml:space="preserve">
    <value>不支持从类型”{0}“到类型”{1}“的转换。</value>
  </data>
  <data name="LoadAssemblyFailed" xml:space="preserve">
    <value>加载程序集失败。</value>
  </data>
  <data name="LoadFunctionFailed" xml:space="preserve">
    <value>加载方法“{0}”失败。</value>
  </data>
  <data name="LoadTypeFailed" xml:space="preserve">
    <value>加载类型数据失败。</value>
  </data>
  <data name="MaxRetryFailed" xml:space="preserve">
    <value>序列步骤重试超过最大次数。</value>
  </data>
  <data name="NoDefaultConstructor" xml:space="preserve">
    <value>常量转换值到类型{0} 失败，因为目标类型没有默认的构造方法。</value>
  </data>
  <data name="OperationAborted" xml:space="preserve">
    <value>操作被终止。</value>
  </data>
  <data name="OperatoinTimeout" xml:space="preserve">
    <value>操作超时。</value>
  </data>
  <data name="RuntimeError" xml:space="preserve">
    <value>运行时异常。</value>
  </data>
  <data name="SetUpFailed" xml:space="preserve">
    <value>“SetUp”序列执行失败。</value>
  </data>
  <data name="StepForceFailed" xml:space="preserve">
    <value>序列配置为强制失败。</value>
  </data>
  <data name="UnconfiguredParam" xml:space="preserve">
    <value>序列中&lt;{0}&gt;参数的值未配置。</value>
  </data>
  <data name="UnexistArgumentSource" xml:space="preserve">
    <value>带有入参的SequenceGroup必须和父级的TestProject同时运行。</value>
  </data>
  <data name="UnexistEvent" xml:space="preserve">
    <value>不存在的会话事件："{0}"。</value>
  </data>
  <data name="UnexistLibrary" xml:space="preserve">
    <value>路径'{1}'下不存在程序集'{0}'。</value>
  </data>
  <data name="UnexistSession" xml:space="preserve">
    <value>不存在ID为”{0}“的运行时会话。</value>
  </data>
  <data name="UnexistVariable" xml:space="preserve">
    <value>当前序列中不存在名称为“{0}”的变量。</value>
  </data>
  <data name="UnregisteredMessage" xml:space="preserve">
    <value>未注册的消息类型：“{0}”。</value>
  </data>
  <data name="UnsupportedStepType" xml:space="preserve">
    <value>序列中存在不支持的Step类型“{0}”。</value>
  </data>
</root>